<Window x:Class="ChatbotNext.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatbotNext"
        xmlns:ui="clr-namespace:NextUI;assembly=NextUI"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        Loaded="Window_Loaded"
        Style="{DynamicResource NUI.Window.EmptyStyle}"
        DataContext="{Binding Source={x:Static local:App.MainWindowVm}}">
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="64"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Background="{DynamicResource NUI.Brush.Dark}">
            <Grid.RowDefinitions>
                <RowDefinition Height="64"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Vertical" DockPanel.Dock="Top">
                <Button x:Name="logoBtn" Style="{DynamicResource NUI.SysButton.TransparentStyle}" Width="48" Height="48" Margin="8"
                        Background="{DynamicResource NUI.Brush.Background.Mask}"
                        ui:NUI.CornerRadius="{DynamicResource NUI.Border.CornerRadius}">
                    <Button.OpacityMask>
                        <VisualBrush>
                            <VisualBrush.Visual>
                                <Border Background="#FFFFFF"
                                        CornerRadius="{DynamicResource NUI.Border.CornerRadius.Circle}"
                                        Width="{Binding ElementName=logoBtn, Path=ActualWidth}"
                                        Height="{Binding ElementName=logoBtn, Path=ActualHeight}"/>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Button.OpacityMask>
                    <Image Focusable="False" Stretch="Fill" ui:NUI.IsHitTestVisibleInCaption="True"
                           Source="{Binding Source={x:Static local:App.Vm}, Path=CurrentUser.Image, Converter={StaticResource Base64ToImageCv}}"/>
                </Button>
            </StackPanel>

            <ItemsControl Grid.Row="1" Focusable="False" Margin="0,8,0,0"
                          ItemsSource="{Binding PageMenuItems}">
                <ItemsControl.Resources>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource NUI.RadioButton.PrimaryStyle}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="BorderThickness" Value="4,0,0,0"/>
                        <Setter Property="Height" Value="48"/>
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="ui:NUI.CornerRadius" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="{DynamicResource NUI.Brush.Primary.Text}"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{StaticResource NUI.Brush.Primary}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource NUI.Brush.Dark.Hover}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource NUI.Brush.Primary.Hover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource NUI.Brush.Dark.Active}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource NUI.Brush.Primary.Active}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <RadioButton GroupName="LeftBarMenuItem" Padding="14"
                                     ToolTip="{ui:ResourceBinding Name}"
                                     IsChecked="{Binding IsChecked}">

                            <Viewbox>
                                <Path Fill="{DynamicResource NUI.Brush.Light}"
                                      Data="{Binding Icon}"/>
                            </Viewbox>
                        </RadioButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl Grid.Row="2" Focusable="False" Margin="0,8,0,0"
                          ItemsSource="{Binding BottomMenuItems}">
                <ItemsControl.Resources>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource NUI.ToggleButton.PrimaryStyle}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Height" Value="48"/>
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="ui:NUI.CornerRadius" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="{DynamicResource NUI.Brush.Primary.Text}"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource NUI.Brush.Dark.Hover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource NUI.Brush.Dark.Active}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton Padding="14"
                                      ToolTip="{ui:ResourceBinding Name}"
                                      IsChecked="{Binding IsChecked}">
                            <Viewbox>
                                <Path Fill="{DynamicResource NUI.Brush.Light}"
                                      Data="{Binding Icon}"/>
                            </Viewbox>
                        </ToggleButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Style="{DynamicResource NUI.SysButton.MinimizeButtonStyle}"/>
                <Button Style="{DynamicResource NUI.SysButton.MaximizeOrNormalButtonStyle}"/>
                <Button Style="{DynamicResource NUI.SysButton.CloseStyle}"/>
            </StackPanel>

            <Frame Grid.RowSpan="2" NavigationUIVisibility="Hidden" Content="{Binding CurrentPage}"/>
        </Grid>
    </Grid>
</Window>
